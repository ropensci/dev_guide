on:
  push:
    branches:
      master
  schedule:
    - cron:  '0 12 * * *'

name: Render-Book-from-master

jobs:
  bookdown:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    name: Render-Book
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: r-lib/actions/setup-r@v1
      
      - uses: r-lib/actions/setup-pandoc@v1
      
      - uses: r-lib/actions/setup-tinytex@v1
      
      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::local_dev_deps_tree(), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            !${{ env.R_LIBS_USER }}/pak
          key: ${{ runner.os }}-${{ steps.get-r-version.outputs.version }}-3-
          
      - name: Install macOS system dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libgit2
          
      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
        shell: Rscript {0}
          
      - name: Render book html
        run: Rscript -e 'bookdown::render_book("index.Rmd", "bookdown::bs4_book", params = list(AIRTABLE_API_KEY = ${{ secrets.AIRTABLE_API_KEY }}))'
        env: # Set the secret as an input
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          
      - name: Render book PDF
        run: Rscript -e 'bookdown::render_book("index.Rmd", new_session = FALSE, "bookdown::pdf_book", output_dir = "pdfbook", params = list(AIRTABLE_API_KEY = ${{ secrets.AIRTABLE_API_KEY }}))'
        env: # Set the secret as an input
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          
      - name: Move files around
        run: Rscript -e 'file.copy(from = "pdfbook/ropensci-dev-guide.pdf", to = "_book/ropensci-dev-guide.pdf")' -e 'purrr::walk(list.files("images", full.names = TRUE), file.copy, to = "_book/images")'

      - name: git config
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "gh-pages committer"
          
      - name: Commit results
        run: |
          cp ghpagescname _book/CNAME
          cd _book
          git init
          git add .
          git commit -m 'update book'
          git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:gh-pages --force
